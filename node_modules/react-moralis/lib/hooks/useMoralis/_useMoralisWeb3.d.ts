import MoralisType from "moralis";
export declare type Web3Provider = "wc" | "walletconnect";
export interface Web3EnableOptions {
    onError?: (error: Error) => void;
    onSuccess?: (web3: MoralisType.Web3) => void;
    onComplete?: () => void;
    throwOnError?: boolean;
    provider?: Web3Provider;
    chainId?: number;
}
/**
 * Handles enabling of web3 and providing it, as soon as the user is authenticated
 */
export declare const _useMoralisWeb3: (Moralis: MoralisType) => {
    enableWeb3: ({ throwOnError, onComplete, onError, onSuccess, provider, chainId, }?: Web3EnableOptions) => Promise<void>;
    web3: MoralisType.Web3 | null;
    isWeb3Enabled: boolean;
    web3EnableError: Error | null;
    isWeb3EnableLoading: boolean;
};
